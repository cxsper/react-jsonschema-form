module.exports = {
  models: {
    files: {
      type: "Schema",
      description: "This collection contains list of files uploaded by users",
      fields: {
        originalName: {
          type: "String",
          description: "Original file name",
          width: 150,
          searchable: true,
          transform: ["trim"],
          fullName: "Original name",
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        size: {
          type: "Number",
          description: "File size in bytes",
          width: 30,
          fullName: "Size",
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        mimeType: {
          type: "String",
          description: "File MIME type",
          width: 150,
          searchable: true,
          transform: ["trim"],
          fullName: "Mime type",
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        filePath: {
          type: "String",
          description: "File path in local filesystem",
          width: 150,
          searchable: true,
          transform: ["trim"],
          fullName: "File path",
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        croppingParameters: {
          type: "Mixed",
          description: "Cropping parameters as sent by frontend",
          fullName: "Cropping parameters",
          visibilityPriority: 100,
          responsivePriority: 100,
          width: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        cropped: {
          type: "Boolean",
          description: "If true then there is a cropped version of this file",
          width: 20,
          fullName: "Cropped",
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        user: {
          type: "LookupObjectID",
          lookup: {
            table: {
              users: {
                foreignKey: "_id",
                label: "login",
                table: "users",
                scopes: {
                  superAdminScope: {
                    permissions: { view: "accessAsSuperAdmin" },
                    where: '{"$eq":[true,true]}',
                  },
                },
                foreignKeyType: "ObjectID",
              },
            },
            id: "FilesUser",
          },
          transform: ["addLookupDetails"],
          fullName: "User",
          visibilityPriority: 100,
          responsivePriority: 100,
          width: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        creator: {
          type: "ObjectID",
          fullName: "creator",
          synthesize: ["creator"],
          description: "Record Creator",
          width: 120,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        createdAt: {
          type: "Date",
          fullName: "createdAt",
          synthesize: ["createdAt"],
          description: "Record Created At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        updatedAt: {
          type: "Date",
          fullName: "updatedAt",
          synthesize: ["updatedAt"],
          description: "Record Updated At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        deletedAt: {
          type: "Date",
          fullName: "deletedAt",
          description: "Record Deleted At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        _temporary: {
          type: "Boolean",
          fullName: "_temporary",
          description: "Temporary",
          width: 20,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        generatorBatchNumber: {
          type: "String",
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          generated: true,
          fullName: "Generator Batch Number",
          description: "Set to the ID of generator batch for synthetic records",
          fieldInfo: { read: true, write: true },
        },
      },
      limitReturnedRecords: 1000,
      actions: {
        width: 100,
        responsivePriority: 50,
        fields: {
          update: {
            description: "Update record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "pencil" },
            action: { type: "action", link: "update" },
          },
          delete: {
            description: "Delete record",
            backgroundColor: "#F44336",
            borderColor: "#f32c1e",
            textColor: "white",
            icon: { link: "trash-o" },
            action: { type: "action", link: "delete" },
          },
          clone: {
            description: "Clone record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "clone" },
            action: { type: "action", link: "clone" },
          },
          viewDetails: {
            description: "View record details",
            backgroundColor: "#2196F3",
            borderColor: "#0c7cd5",
            textColor: "white",
            icon: { link: "eye" },
            action: { type: "action", link: "viewDetails" },
          },
          view: { showInTable: false },
          create: { showInTable: false },
        },
      },
      fullName: "Files",
      defaultSortBy: { _id: -1 },
    },
    roles: {
      type: "Schema",
      description:
        "This collection solely serves the purpose of user authentication. Besides password recovery email there should be no PII in this collection.",
      fields: {
        name: {
          type: "String",
          unique: true,
          required: true,
          fullName: "Role Name",
          description: "Unique role name",
          width: 150,
          searchable: true,
          transform: ["trim"],
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        permissions: {
          type: "String[]",
          list: {
            allowEditingSettings: "allowEditingSettings",
            allowEditingDatasets: "allowEditingDatasets",
            allowManagingBackgroundJobs: "allowManagingBackgroundJobs",
          },
          fullName: "Permission names",
          visibilityPriority: 100,
          responsivePriority: 100,
          width: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        creator: {
          type: "ObjectID",
          fullName: "creator",
          synthesize: ["creator"],
          description: "Record Creator",
          width: 120,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        createdAt: {
          type: "Date",
          fullName: "createdAt",
          synthesize: ["createdAt"],
          description: "Record Created At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        updatedAt: {
          type: "Date",
          fullName: "updatedAt",
          synthesize: ["updatedAt"],
          description: "Record Updated At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        deletedAt: {
          type: "Date",
          fullName: "deletedAt",
          description: "Record Deleted At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        _temporary: {
          type: "Boolean",
          fullName: "_temporary",
          description: "Temporary",
          width: 20,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        generatorBatchNumber: {
          type: "String",
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          generated: true,
          fullName: "Generator Batch Number",
          description: "Set to the ID of generator batch for synthetic records",
          fieldInfo: { read: true, write: true },
        },
      },
      limitReturnedRecords: 1000,
      actions: {
        width: 100,
        responsivePriority: 50,
        fields: {
          update: {
            description: "Update record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "pencil" },
            action: { type: "action", link: "update" },
          },
          delete: {
            description: "Delete record",
            backgroundColor: "#F44336",
            borderColor: "#f32c1e",
            textColor: "white",
            icon: { link: "trash-o" },
            action: { type: "action", link: "delete" },
          },
          clone: {
            description: "Clone record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "clone" },
            action: { type: "action", link: "clone" },
          },
          viewDetails: {
            description: "View record details",
            backgroundColor: "#2196F3",
            borderColor: "#0c7cd5",
            textColor: "white",
            icon: { link: "eye" },
            action: { type: "action", link: "viewDetails" },
          },
          view: { showInTable: false },
          create: { showInTable: false },
        },
      },
      fullName: "Roles",
      defaultSortBy: { _id: -1 },
    },
    users: {
      type: "Schema",
      singleRecord: false,
      limitReturnedRecords: 1000000,
      controller: "user",
      schemaTransform: ["user"],
      description: "Company Users",
      fields: {
        login: {
          type: "String",
          unique: true,
          required: true,
          fullName: "Login",
          description: "Unique use login. Could be email or anything else.",
          validate: [
            {
              validator: "minLength",
              arguments: { length: "5" },
              errorMessages: {
                default:
                  "Value is too short, should be at least $length characters long",
              },
            },
            {
              validator: "maxLength",
              arguments: { length: "30" },
              errorMessages: {
                default:
                  "Value is too long, should be at most $length characters long",
              },
            },
          ],
          formWidth: "6",
          width: 150,
          searchable: true,
          transform: ["trim"],
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        email: {
          type: "String",
          default: "",
          required: true,
          subtype: "Email",
          fullName: "Email",
          description: "Email",
          width: 150,
          searchable: true,
          transform: ["trim"],
          validate: [
            {
              validator: "regex",
              arguments: {
                regex:
                  "^[a-zA-Z0-9.!#$%&’*+\\/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$",
                regexOptions: "i",
              },
              errorMessages: { default: "Please enter correct email" },
            },
          ],
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        password: {
          type: "String",
          default: "",
          required: true,
          subtype: "Password",
          fullName: "Password",
          description: "User password. Please make it complex.",
          showInDatatable: false,
          formWidth: "6 ",
          showInForm: true,
          width: 150,
          searchable: true,
          transform: [["rewritePasswordAndAddSalt", "cleanupPassword"], "trim"],
          validate: [
            {
              validator: "regex",
              arguments: {
                regex:
                  "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%!&^*_\\-]).{8,}$",
                regexOptions: "",
              },
              errorMessages: {
                default:
                  "Password must contain at least one of each: digit 0-9, lowercase character, uppercase character and one special character: @#$%!&^*-_ and be at least 8 characters long",
              },
            },
          ],
          visibilityPriority: 100,
          responsivePriority: 100,
          showInViewDetails: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        salt: {
          type: "String",
          generated: true,
          fullName: "Salt",
          description: "Password hash function salt",
          width: 150,
          searchable: true,
          transform: ["trim"],
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        resetPasswordToken: {
          type: "String",
          generated: true,
          fullName: "Reset Password Token",
          description:
            "The system assigned t`oken that is sent to the citizen when they request a password reset.",
          width: 150,
          searchable: true,
          transform: ["trim"],
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        resetPasswordExpires: {
          type: "Date",
          generated: true,
          fullName: "Reset Password Expires",
          description: "The date the password token will expire.",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        roles: {
          type: "String[]",
          list: { SuperAdmin: "SuperAdmin", User: "User", Guest: "Guest" },
          fullName: "Role names",
          visibilityPriority: 100,
          responsivePriority: 100,
          width: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        firstName: {
          type: "String",
          fullName: "First Name",
          required: "$action == 'update'",
          width: 150,
          searchable: true,
          transform: ["trim"],
          validate: [
            {
              validator: "required",
              arguments: {},
              errorMessages: { default: "Field is required" },
            },
          ],
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        lastName: {
          type: "String",
          fullName: "Last Name",
          required: "$action == 'update'",
          width: 150,
          searchable: true,
          transform: ["trim"],
          validate: [
            {
              validator: "required",
              arguments: {},
              errorMessages: { default: "Field is required" },
            },
          ],
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        phone: {
          type: "String",
          fullName: "Home Phone",
          subtype: "Phone",
          description: "Home Phone",
          formWidth: "6",
          width: 150,
          searchable: true,
          transform: ["trim"],
          validate: [
            {
              validator: "regex",
              arguments: {
                regex: "\\d{3}[^\\d]*\\d{3}[^\\d]*\\d{4}",
                regexOptions: "i",
              },
              errorMessages: {
                default: "Please provide correct US phone number",
              },
            },
          ],
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        creator: {
          type: "ObjectID",
          fullName: "creator",
          synthesize: ["creator"],
          description: "Record Creator",
          width: 120,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        createdAt: {
          type: "Date",
          fullName: "createdAt",
          synthesize: ["createdAt"],
          description: "Record Created At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        updatedAt: {
          type: "Date",
          fullName: "updatedAt",
          synthesize: ["updatedAt"],
          description: "Record Updated At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        deletedAt: {
          type: "Date",
          fullName: "deletedAt",
          description: "Record Deleted At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        _temporary: {
          type: "Boolean",
          fullName: "_temporary",
          description: "Temporary",
          width: 20,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        generatorBatchNumber: {
          type: "String",
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          generated: true,
          fullName: "Generator Batch Number",
          description: "Set to the ID of generator batch for synthetic records",
          fieldInfo: { read: true, write: true },
        },
      },
      fullName: "Company Users",
      defaultSortBy: { login: 1 },
      actions: {
        fields: {
          update: {
            description: "Update record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "pencil" },
            action: { type: "action", link: "update" },
          },
          delete: {
            description: "Delete record",
            backgroundColor: "#F44336",
            borderColor: "#f32c1e",
            textColor: "white",
            icon: { link: "trash-o" },
            action: { type: "action", link: "delete" },
          },
          clone: {
            description: "Clone record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "clone" },
            action: { type: "action", link: "clone" },
          },
          viewDetails: {
            description: "View record details",
            backgroundColor: "#2196F3",
            borderColor: "#0c7cd5",
            textColor: "white",
            icon: { link: "eye" },
            action: { type: "action", link: "viewDetails" },
          },
          view: { showInTable: false },
          create: { showInTable: false },
        },
        width: 100,
        responsivePriority: 50,
      },
    },
    dataSources: {
      type: "Schema",
      fullName: "Data Sources",
      actions: {
        fields: {
          update: {
            description: "Update record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "pencil" },
            action: { type: "action", link: "update" },
          },
          delete: {
            description: "Delete record",
            backgroundColor: "#F44336",
            borderColor: "#f32c1e",
            textColor: "white",
            icon: { link: "trash-o" },
            action: { type: "action", link: "delete" },
          },
          clone: {
            description: "Clone record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "clone" },
            action: { type: "action", link: "clone" },
          },
          viewDetails: {
            description: "View record details",
            backgroundColor: "#2196F3",
            borderColor: "#0c7cd5",
            textColor: "white",
            icon: { link: "eye" },
            action: { type: "action", link: "viewDetails" },
          },
          view: { showInTable: false },
          create: { showInTable: false },
        },
        width: 100,
        responsivePriority: 50,
      },
      fields: {
        name: {
          type: "String",
          fullName: "Name",
          required: true,
          width: 150,
          searchable: true,
          transform: ["trim"],
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        description: {
          type: "String",
          fullName: "Description",
          subtype: "Text",
          width: 150,
          searchable: true,
          transform: ["trim"],
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        type: {
          required: true,
          list: {
            aggregationPipeline: "Aggregation Pipeline",
            static: "Static",
            rest: "REST",
            mapReduce: "MapReduce",
            setOperations: "Set Operations",
          },
          type: "String",
          width: 150,
          searchable: true,
          transform: ["trim"],
          fullName: "Type",
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        stages: {
          type: "Array",
          fullName: "Stages",
          showInDatatable: false,
          show: "_.get(row,'type')=='aggregationPipeline'",
          actions: {
            fields: {
              delete: { permissions: "accessAsUser" },
              collapseExpand: { permissions: "accessAsUser" },
              color: {
                permissions: "accessAsUser",
                description: "Change the Stage Header Color",
                backgroundColor: "#4CAF50",
                borderColor: "#388E3C",
                textColor: "white",
                iconOn: { link: "expand" },
                iconOff: { link: "collapse" },
                action: { type: "toggle", link: "changeStageColor" },
              },
              comment: { permissions: "accessAsUser" },
              enableDisable: { permissions: "accessAsUser" },
            },
          },
          fields: {
            type: {
              type: "String",
              fullName: "Type",
              list: {
                addFields: "Add Fields",
                bucket: "Bucket",
                bucketAuto: "Bucket Automatically",
                collStats: "Collection Statistics",
                count: "Count Records",
                facet:
                  "Facet: Process multiple aggregation pipelines within a single stage on the same set of input documents",
                geoNear: "GeoNear: Geospatial Proximity",
                graphLookup: "GraphLookup: Recursively Search on a collection",
                group:
                  "Group: Group input documents by a specified identifier expression and applies the accumulator expressions",
                project: "Project",
              },
              width: 150,
              searchable: true,
              transform: ["trim"],
              visibilityPriority: 100,
              responsivePriority: 100,
              showInDatatable: true,
              showInViewDetails: true,
              showInForm: true,
              showInGraphQL: true,
              fieldInfo: { read: true, write: true },
            },
            project: {
              type: "Object",
              fullName: "Project",
              show: "_.get(row,'type')==\"project\"",
              fields: {
                fields: {
                  type: "Array",
                  fullName: "Fields",
                  fields: {
                    existingFieldName: {
                      type: "String",
                      width: 150,
                      searchable: true,
                      transform: ["trim"],
                      fullName: "Existing field name",
                      visibilityPriority: 100,
                      responsivePriority: 100,
                      showInDatatable: true,
                      showInViewDetails: true,
                      showInForm: true,
                      showInGraphQL: true,
                      fieldInfo: { read: true, write: true },
                    },
                    newFieldName: {
                      type: "String",
                      width: 150,
                      searchable: true,
                      transform: ["trim"],
                      fullName: "New field name",
                      visibilityPriority: 100,
                      responsivePriority: 100,
                      showInDatatable: true,
                      showInViewDetails: true,
                      showInForm: true,
                      showInGraphQL: true,
                      fieldInfo: { read: true, write: true },
                    },
                    visible: {
                      type: "String",
                      width: 150,
                      searchable: true,
                      transform: ["trim"],
                      fullName: "Visible",
                      visibilityPriority: 100,
                      responsivePriority: 100,
                      showInDatatable: true,
                      showInViewDetails: true,
                      showInForm: true,
                      showInGraphQL: true,
                      fieldInfo: { read: true, write: true },
                    },
                    fieldExpression: {
                      type: "String",
                      width: 150,
                      searchable: true,
                      transform: ["trim"],
                      fullName: "Field expression",
                      visibilityPriority: 100,
                      responsivePriority: 100,
                      showInDatatable: true,
                      showInViewDetails: true,
                      showInForm: true,
                      showInGraphQL: true,
                      fieldInfo: { read: true, write: true },
                    },
                  },
                  visibilityPriority: 100,
                  responsivePriority: 100,
                  width: 100,
                  showInDatatable: true,
                  showInViewDetails: true,
                  showInForm: true,
                  showInGraphQL: true,
                  fieldInfo: { read: true, write: true },
                },
              },
              visibilityPriority: 100,
              responsivePriority: 100,
              width: 100,
              showInDatatable: true,
              showInViewDetails: true,
              showInForm: true,
              showInGraphQL: true,
              fieldInfo: { read: true, write: true },
            },
          },
          visibilityPriority: 100,
          responsivePriority: 100,
          width: 100,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        file: {
          type: "File",
          fullName: "File",
          showInDatatable: false,
          show: "_.get(row,'type')==\"static\"",
          visibilityPriority: 100,
          responsivePriority: 100,
          width: 100,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        creator: {
          type: "ObjectID",
          fullName: "creator",
          synthesize: ["creator"],
          description: "Record Creator",
          width: 120,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        createdAt: {
          type: "Date",
          fullName: "createdAt",
          synthesize: ["createdAt"],
          description: "Record Created At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        updatedAt: {
          type: "Date",
          fullName: "updatedAt",
          synthesize: ["updatedAt"],
          description: "Record Updated At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        deletedAt: {
          type: "Date",
          fullName: "deletedAt",
          description: "Record Deleted At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        _temporary: {
          type: "Boolean",
          fullName: "_temporary",
          description: "Temporary",
          width: 20,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        generatorBatchNumber: {
          type: "String",
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          generated: true,
          fullName: "Generator Batch Number",
          description: "Set to the ID of generator batch for synthetic records",
          fieldInfo: { read: true, write: true },
        },
      },
      limitReturnedRecords: 1000,
      defaultSortBy: { _id: -1 },
    },
    dataSets: {
      type: "Schema",
      fullName: "Data Sets",
      actions: {
        fields: {
          update: {
            description: "Update record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "pencil" },
            action: { type: "action", link: "update" },
          },
          delete: {
            description: "Delete record",
            backgroundColor: "#F44336",
            borderColor: "#f32c1e",
            textColor: "white",
            icon: { link: "trash-o" },
            action: { type: "action", link: "delete" },
          },
          clone: {
            description: "Clone record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "clone" },
            action: { type: "action", link: "clone" },
          },
          viewDetails: {
            description: "View record details",
            backgroundColor: "#2196F3",
            borderColor: "#0c7cd5",
            textColor: "white",
            icon: { link: "eye" },
            action: { type: "action", link: "viewDetails" },
          },
          view: { showInTable: false },
          create: { showInTable: false },
        },
        width: 100,
        responsivePriority: 50,
      },
      fields: {
        name: {
          type: "String",
          fullName: "Name",
          description: "Name",
          required: true,
          unique: true,
          width: 150,
          searchable: true,
          transform: ["trim"],
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        description: {
          type: "String",
          fullName: "Description",
          subtype: "Text",
          width: 150,
          searchable: true,
          transform: ["trim"],
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        dataSource: {
          type: "LookupObjectID",
          fullName: "Data Source",
          required: true,
          lookup: {
            table: {
              dataSources: {
                foreignKey: "_id",
                label: "name",
                scopes: {
                  all: {
                    permissions: { view: "accessAsUser" },
                    where: "{$eq: [1,1]}",
                  },
                  superAdminScope: {
                    permissions: { view: "accessAsSuperAdmin" },
                    where: '{"$eq":[true,true]}',
                  },
                },
                table: "dataSources",
                foreignKeyType: "ObjectID",
              },
            },
            id: "DatasetsDatasource",
          },
          transform: ["addLookupDetails"],
          visibilityPriority: 100,
          responsivePriority: 100,
          width: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        updateSpecType: {
          type: "String",
          fullName: "Update Type",
          required: true,
          list: {
            never: "Generate once only, do not update",
            recurring: "On specific dates",
            asNeeded: "As Needed",
          },
          formWidth: "4",
          render: "dataSetUpdateSpec",
          width: 150,
          searchable: true,
          transform: ["trim"],
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        recurringUpdateSpecStartingFromDate: {
          type: "Date",
          fullName: "Starting",
          subtype: "DateTime",
          showInDatatable: false,
          formWidth: "3",
          show: "_.get(row,'updateSpecType')==\"recurring\"",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        recurringUpdateSpecNumber: {
          type: "Number",
          fullName: "Every",
          showInDatatable: false,
          formWidth: "2",
          show: "_.get(row,'updateSpecType')==\"recurring\"",
          width: 30,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        recurringUpdateSpecUnit: {
          type: "String",
          fullName: "Duration Unit",
          showInDatatable: false,
          list: {
            hours: "Hour(s)",
            minutes: "Minute(s)",
            days: "Day(s)",
            weeks: "Week(s)",
            mongths: "Month(s)",
          },
          formWidth: "3",
          show: "_.get(row,'updateSpecType')==\"recurring\"",
          width: 150,
          searchable: true,
          transform: ["trim"],
          visibilityPriority: 100,
          responsivePriority: 100,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        asNeededUpdateSpecType: {
          type: "String",
          fullName: "Freshness Kind",
          showInDatatable: false,
          list: {
            keepFresh: "Keep at most this old",
            whenUsedByDataSource:
              "Update every time it's being used in another DataSource",
            whenUsed: "Update every time it's used (traffic and CPU intensive)",
          },
          formWidth: "3",
          show: "_.get(row,'updateSpecType')==\"asNeeded\"",
          width: 150,
          searchable: true,
          transform: ["trim"],
          visibilityPriority: 100,
          responsivePriority: 100,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        asNeededUpdateSpecNumber: {
          type: "Number",
          fullName: "Number of",
          showInDatatable: false,
          formWidth: "2",
          show:
            "_.get(row,'updateSpecType')==\"asNeeded\" && _.get(row, 'asNeededUpdateSpecType')==\"keepFresh\"",
          width: 30,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        asNeededUpdateSpecUnit: {
          type: "String",
          fullName: "Unit",
          showInDatatable: false,
          list: {
            hours: "Hour(s)",
            minutes: "Minute(s)",
            days: "Day(s)",
            weeks: "Week(s)",
            mongths: "Month(s)",
          },
          formWidth: "3",
          show:
            "_.get(row,'updateSpecType')==\"asNeeded\" && _.get(row, 'asNeededUpdateSpecType')==\"keepFresh\"",
          width: 150,
          searchable: true,
          transform: ["trim"],
          visibilityPriority: 100,
          responsivePriority: 100,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        creator: {
          type: "ObjectID",
          fullName: "creator",
          synthesize: ["creator"],
          description: "Record Creator",
          width: 120,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        createdAt: {
          type: "Date",
          fullName: "createdAt",
          synthesize: ["createdAt"],
          description: "Record Created At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        updatedAt: {
          type: "Date",
          fullName: "updatedAt",
          synthesize: ["updatedAt"],
          description: "Record Updated At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        deletedAt: {
          type: "Date",
          fullName: "deletedAt",
          description: "Record Deleted At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        _temporary: {
          type: "Boolean",
          fullName: "_temporary",
          description: "Temporary",
          width: 20,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        generatorBatchNumber: {
          type: "String",
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          generated: true,
          fullName: "Generator Batch Number",
          description: "Set to the ID of generator batch for synthetic records",
          fieldInfo: { read: true, write: true },
        },
      },
      limitReturnedRecords: 1000,
      defaultSortBy: { _id: -1 },
    },
    exports: {
      type: "Schema",
      fullName: "Exports",
      actions: {
        fields: {
          update: {
            description: "Update record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "pencil" },
            action: { type: "action", link: "update" },
          },
          delete: {
            description: "Delete record",
            backgroundColor: "#F44336",
            borderColor: "#f32c1e",
            textColor: "white",
            icon: { link: "trash-o" },
            action: { type: "action", link: "delete" },
          },
          clone: {
            description: "Clone record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "clone" },
            action: { type: "action", link: "clone" },
          },
          viewDetails: {
            description: "View record details",
            backgroundColor: "#2196F3",
            borderColor: "#0c7cd5",
            textColor: "white",
            icon: { link: "eye" },
            action: { type: "action", link: "viewDetails" },
          },
          view: { showInTable: false },
          create: { showInTable: false },
        },
        width: 100,
        responsivePriority: 50,
      },
      fields: {
        name: {
          type: "String",
          fullName: "Property/Unit ID",
          description: "Property/Unit ID",
          width: 150,
          searchable: true,
          transform: ["trim"],
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        creator: {
          type: "ObjectID",
          fullName: "creator",
          synthesize: ["creator"],
          description: "Record Creator",
          width: 120,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        createdAt: {
          type: "Date",
          fullName: "createdAt",
          synthesize: ["createdAt"],
          description: "Record Created At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        updatedAt: {
          type: "Date",
          fullName: "updatedAt",
          synthesize: ["updatedAt"],
          description: "Record Updated At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        deletedAt: {
          type: "Date",
          fullName: "deletedAt",
          description: "Record Deleted At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        _temporary: {
          type: "Boolean",
          fullName: "_temporary",
          description: "Temporary",
          width: 20,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        generatorBatchNumber: {
          type: "String",
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          generated: true,
          fullName: "Generator Batch Number",
          description: "Set to the ID of generator batch for synthetic records",
          fieldInfo: { read: true, write: true },
        },
      },
      limitReturnedRecords: 1000,
      defaultSortBy: { _id: -1 },
    },
    dashboards: {
      type: "Schema",
      fullName: "Settings",
      description: "Settings",
      singleRecord: true,
      actions: {
        fields: {
          update: {
            description: "Update record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "pencil" },
            action: { type: "action", link: "update" },
          },
          delete: {
            description: "Delete record",
            backgroundColor: "#F44336",
            borderColor: "#f32c1e",
            textColor: "white",
            icon: { link: "trash-o" },
            action: { type: "action", link: "delete" },
          },
          clone: {
            description: "Clone record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "clone" },
            action: { type: "action", link: "clone" },
          },
          viewDetails: {
            description: "View record details",
            backgroundColor: "#2196F3",
            borderColor: "#0c7cd5",
            textColor: "white",
            icon: { link: "eye" },
            action: { type: "action", link: "viewDetails" },
          },
          view: { showInTable: false },
          create: { showInTable: false },
        },
        width: 100,
        responsivePriority: 50,
      },
      fields: {
        name: {
          type: "String",
          fullName: "Name",
          description: "Name",
          width: 150,
          searchable: true,
          transform: ["trim"],
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        creator: {
          type: "ObjectID",
          fullName: "creator",
          synthesize: ["creator"],
          description: "Record Creator",
          width: 120,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        createdAt: {
          type: "Date",
          fullName: "createdAt",
          synthesize: ["createdAt"],
          description: "Record Created At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        updatedAt: {
          type: "Date",
          fullName: "updatedAt",
          synthesize: ["updatedAt"],
          description: "Record Updated At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        deletedAt: {
          type: "Date",
          fullName: "deletedAt",
          description: "Record Deleted At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        _temporary: {
          type: "Boolean",
          fullName: "_temporary",
          description: "Temporary",
          width: 20,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        generatorBatchNumber: {
          type: "String",
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          generated: true,
          fullName: "Generator Batch Number",
          description: "Set to the ID of generator batch for synthetic records",
          fieldInfo: { read: true, write: true },
        },
      },
      limitReturnedRecords: 1000,
      defaultSortBy: { _id: -1 },
    },
    charts: {
      type: "Schema",
      fullName: "Charts",
      actions: {
        fields: {
          update: {
            description: "Update record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "pencil" },
            action: { type: "action", link: "update" },
          },
          delete: {
            description: "Delete record",
            backgroundColor: "#F44336",
            borderColor: "#f32c1e",
            textColor: "white",
            icon: { link: "trash-o" },
            action: { type: "action", link: "delete" },
          },
          clone: {
            description: "Clone record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "clone" },
            action: { type: "action", link: "clone" },
          },
          viewDetails: {
            description: "View record details",
            backgroundColor: "#2196F3",
            borderColor: "#0c7cd5",
            textColor: "white",
            icon: { link: "eye" },
            action: { type: "action", link: "viewDetails" },
          },
          view: { showInTable: false },
          create: { showInTable: false },
        },
        width: 100,
        responsivePriority: 50,
      },
      fields: {
        name: {
          type: "String",
          fullName: "Name",
          unique: true,
          width: 150,
          searchable: true,
          transform: ["trim"],
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        creator: {
          type: "ObjectID",
          fullName: "creator",
          synthesize: ["creator"],
          description: "Record Creator",
          width: 120,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        createdAt: {
          type: "Date",
          fullName: "createdAt",
          synthesize: ["createdAt"],
          description: "Record Created At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        updatedAt: {
          type: "Date",
          fullName: "updatedAt",
          synthesize: ["updatedAt"],
          description: "Record Updated At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        deletedAt: {
          type: "Date",
          fullName: "deletedAt",
          description: "Record Deleted At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        _temporary: {
          type: "Boolean",
          fullName: "_temporary",
          description: "Temporary",
          width: 20,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        generatorBatchNumber: {
          type: "String",
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          generated: true,
          fullName: "Generator Batch Number",
          description: "Set to the ID of generator batch for synthetic records",
          fieldInfo: { read: true, write: true },
        },
      },
      limitReturnedRecords: 1000,
      defaultSortBy: { _id: -1 },
    },
    templates: {
      type: "Schema",
      fullName: "Templates",
      actions: {
        fields: {
          update: {
            description: "Update record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "pencil" },
            action: { type: "action", link: "update" },
          },
          delete: {
            description: "Delete record",
            backgroundColor: "#F44336",
            borderColor: "#f32c1e",
            textColor: "white",
            icon: { link: "trash-o" },
            action: { type: "action", link: "delete" },
          },
          clone: {
            description: "Clone record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "clone" },
            action: { type: "action", link: "clone" },
          },
          viewDetails: {
            description: "View record details",
            backgroundColor: "#2196F3",
            borderColor: "#0c7cd5",
            textColor: "white",
            icon: { link: "eye" },
            action: { type: "action", link: "viewDetails" },
          },
          view: { showInTable: false },
          create: { showInTable: false },
        },
        width: 100,
        responsivePriority: 50,
      },
      fields: {
        name: {
          type: "String",
          width: 150,
          searchable: true,
          transform: ["trim"],
          fullName: "Name",
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        type: {
          list: { dataSource: "Data Source", action: "Action" },
          type: "String",
          width: 150,
          searchable: true,
          transform: ["trim"],
          fullName: "Type",
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        creator: {
          type: "ObjectID",
          fullName: "creator",
          synthesize: ["creator"],
          description: "Record Creator",
          width: 120,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        createdAt: {
          type: "Date",
          fullName: "createdAt",
          synthesize: ["createdAt"],
          description: "Record Created At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        updatedAt: {
          type: "Date",
          fullName: "updatedAt",
          synthesize: ["updatedAt"],
          description: "Record Updated At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        deletedAt: {
          type: "Date",
          fullName: "deletedAt",
          description: "Record Deleted At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        _temporary: {
          type: "Boolean",
          fullName: "_temporary",
          description: "Temporary",
          width: 20,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        generatorBatchNumber: {
          type: "String",
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          generated: true,
          fullName: "Generator Batch Number",
          description: "Set to the ID of generator batch for synthetic records",
          fieldInfo: { read: true, write: true },
        },
      },
      limitReturnedRecords: 1000,
      defaultSortBy: { _id: -1 },
    },
    actions: {
      type: "Schema",
      fullName: "Actions",
      actions: {
        fields: {
          update: {
            description: "Update record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "pencil" },
            action: { type: "action", link: "update" },
          },
          delete: {
            description: "Delete record",
            backgroundColor: "#F44336",
            borderColor: "#f32c1e",
            textColor: "white",
            icon: { link: "trash-o" },
            action: { type: "action", link: "delete" },
          },
          clone: {
            description: "Clone record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "clone" },
            action: { type: "action", link: "clone" },
          },
          viewDetails: {
            description: "View record details",
            backgroundColor: "#2196F3",
            borderColor: "#0c7cd5",
            textColor: "white",
            icon: { link: "eye" },
            action: { type: "action", link: "viewDetails" },
          },
          view: { showInTable: false },
          create: { showInTable: false },
        },
        width: 100,
        responsivePriority: 50,
      },
      fields: {
        name: {
          type: "String",
          fullName: "Name",
          required: true,
          unique: true,
          width: 150,
          searchable: true,
          transform: ["trim"],
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        creator: {
          type: "ObjectID",
          fullName: "creator",
          synthesize: ["creator"],
          description: "Record Creator",
          width: 120,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        createdAt: {
          type: "Date",
          fullName: "createdAt",
          synthesize: ["createdAt"],
          description: "Record Created At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        updatedAt: {
          type: "Date",
          fullName: "updatedAt",
          synthesize: ["updatedAt"],
          description: "Record Updated At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        deletedAt: {
          type: "Date",
          fullName: "deletedAt",
          description: "Record Deleted At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        _temporary: {
          type: "Boolean",
          fullName: "_temporary",
          description: "Temporary",
          width: 20,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        generatorBatchNumber: {
          type: "String",
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          generated: true,
          fullName: "Generator Batch Number",
          description: "Set to the ID of generator batch for synthetic records",
          fieldInfo: { read: true, write: true },
        },
      },
      limitReturnedRecords: 1000,
      defaultSortBy: { _id: -1 },
    },
    campaigns: {
      type: "Schema",
      fullName: "Campaigns",
      actions: {
        fields: {
          update: {
            description: "Update record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "pencil" },
            action: { type: "action", link: "update" },
          },
          delete: {
            description: "Delete record",
            backgroundColor: "#F44336",
            borderColor: "#f32c1e",
            textColor: "white",
            icon: { link: "trash-o" },
            action: { type: "action", link: "delete" },
          },
          clone: {
            description: "Clone record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "clone" },
            action: { type: "action", link: "clone" },
          },
          viewDetails: {
            description: "View record details",
            backgroundColor: "#2196F3",
            borderColor: "#0c7cd5",
            textColor: "white",
            icon: { link: "eye" },
            action: { type: "action", link: "viewDetails" },
          },
          view: { showInTable: false },
          create: { showInTable: false },
        },
        width: 100,
        responsivePriority: 50,
      },
      fields: {
        name: {
          type: "String",
          fullName: "Name",
          width: 150,
          searchable: true,
          transform: ["trim"],
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        creator: {
          type: "ObjectID",
          fullName: "creator",
          synthesize: ["creator"],
          description: "Record Creator",
          width: 120,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        createdAt: {
          type: "Date",
          fullName: "createdAt",
          synthesize: ["createdAt"],
          description: "Record Created At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        updatedAt: {
          type: "Date",
          fullName: "updatedAt",
          synthesize: ["updatedAt"],
          description: "Record Updated At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        deletedAt: {
          type: "Date",
          fullName: "deletedAt",
          description: "Record Deleted At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        _temporary: {
          type: "Boolean",
          fullName: "_temporary",
          description: "Temporary",
          width: 20,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        generatorBatchNumber: {
          type: "String",
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          generated: true,
          fullName: "Generator Batch Number",
          description: "Set to the ID of generator batch for synthetic records",
          fieldInfo: { read: true, write: true },
        },
      },
      limitReturnedRecords: 1000,
      defaultSortBy: { _id: -1 },
    },
    publications: {
      type: "Schema",
      fullName: "Publications",
      actions: {
        fields: {
          update: {
            description: "Update record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "pencil" },
            action: { type: "action", link: "update" },
          },
          delete: {
            description: "Delete record",
            backgroundColor: "#F44336",
            borderColor: "#f32c1e",
            textColor: "white",
            icon: { link: "trash-o" },
            action: { type: "action", link: "delete" },
          },
          clone: {
            description: "Clone record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "clone" },
            action: { type: "action", link: "clone" },
          },
          viewDetails: {
            description: "View record details",
            backgroundColor: "#2196F3",
            borderColor: "#0c7cd5",
            textColor: "white",
            icon: { link: "eye" },
            action: { type: "action", link: "viewDetails" },
          },
          view: { showInTable: false },
          create: { showInTable: false },
        },
        width: 100,
        responsivePriority: 50,
      },
      fields: {
        name: {
          type: "String",
          fullName: "Name",
          required: true,
          unique: true,
          width: 150,
          searchable: true,
          transform: ["trim"],
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        creator: {
          type: "ObjectID",
          fullName: "creator",
          synthesize: ["creator"],
          description: "Record Creator",
          width: 120,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        createdAt: {
          type: "Date",
          fullName: "createdAt",
          synthesize: ["createdAt"],
          description: "Record Created At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        updatedAt: {
          type: "Date",
          fullName: "updatedAt",
          synthesize: ["updatedAt"],
          description: "Record Updated At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        deletedAt: {
          type: "Date",
          fullName: "deletedAt",
          description: "Record Deleted At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        _temporary: {
          type: "Boolean",
          fullName: "_temporary",
          description: "Temporary",
          width: 20,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        generatorBatchNumber: {
          type: "String",
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          generated: true,
          fullName: "Generator Batch Number",
          description: "Set to the ID of generator batch for synthetic records",
          fieldInfo: { read: true, write: true },
        },
      },
      limitReturnedRecords: 1000,
      defaultSortBy: { _id: -1 },
    },
    wizards: {
      type: "Schema",
      fullName: "Wizards",
      actions: {
        fields: {
          update: {
            description: "Update record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "pencil" },
            action: { type: "action", link: "update" },
          },
          delete: {
            description: "Delete record",
            backgroundColor: "#F44336",
            borderColor: "#f32c1e",
            textColor: "white",
            icon: { link: "trash-o" },
            action: { type: "action", link: "delete" },
          },
          clone: {
            description: "Clone record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "clone" },
            action: { type: "action", link: "clone" },
          },
          viewDetails: {
            description: "View record details",
            backgroundColor: "#2196F3",
            borderColor: "#0c7cd5",
            textColor: "white",
            icon: { link: "eye" },
            action: { type: "action", link: "viewDetails" },
          },
          view: { showInTable: false },
          create: { showInTable: false },
        },
        width: 100,
        responsivePriority: 50,
      },
      fields: {
        name: {
          type: "String",
          fullName: "Name",
          required: true,
          unique: true,
          width: 150,
          searchable: true,
          transform: ["trim"],
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        creator: {
          type: "ObjectID",
          fullName: "creator",
          synthesize: ["creator"],
          description: "Record Creator",
          width: 120,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        createdAt: {
          type: "Date",
          fullName: "createdAt",
          synthesize: ["createdAt"],
          description: "Record Created At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        updatedAt: {
          type: "Date",
          fullName: "updatedAt",
          synthesize: ["updatedAt"],
          description: "Record Updated At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        deletedAt: {
          type: "Date",
          fullName: "deletedAt",
          description: "Record Deleted At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        _temporary: {
          type: "Boolean",
          fullName: "_temporary",
          description: "Temporary",
          width: 20,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        generatorBatchNumber: {
          type: "String",
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          generated: true,
          fullName: "Generator Batch Number",
          description: "Set to the ID of generator batch for synthetic records",
          fieldInfo: { read: true, write: true },
        },
      },
      limitReturnedRecords: 1000,
      defaultSortBy: { _id: -1 },
    },
    credentials: {
      type: "Schema",
      fullName: "Credentials",
      actions: {
        fields: {
          update: {
            description: "Update record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "pencil" },
            action: { type: "action", link: "update" },
          },
          delete: {
            description: "Delete record",
            backgroundColor: "#F44336",
            borderColor: "#f32c1e",
            textColor: "white",
            icon: { link: "trash-o" },
            action: { type: "action", link: "delete" },
          },
          clone: {
            description: "Clone record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "clone" },
            action: { type: "action", link: "clone" },
          },
          viewDetails: {
            description: "View record details",
            backgroundColor: "#2196F3",
            borderColor: "#0c7cd5",
            textColor: "white",
            icon: { link: "eye" },
            action: { type: "action", link: "viewDetails" },
          },
          view: { showInTable: false },
          create: { showInTable: false },
        },
        width: 100,
        responsivePriority: 50,
      },
      fields: {
        name: {
          required: true,
          type: "String",
          width: 150,
          searchable: true,
          transform: ["trim"],
          fullName: "Name",
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        type: {
          required: true,
          list: {
            basic: "Login+Password",
            oauth2: "OAuth 2.0",
            publicKey: "Public Key",
            token: "Token",
          },
          type: "String",
          width: 150,
          searchable: true,
          transform: ["trim"],
          fullName: "Type",
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        login: {
          show: "row['type']=='basic''",
          type: "String",
          width: 150,
          searchable: true,
          transform: ["trim"],
          fullName: "Login",
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        password: {
          show: "row['type']=='basic''",
          type: "String",
          width: 150,
          searchable: true,
          transform: ["trim"],
          fullName: "Password",
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        secret: {
          show: "row['type']=='oauth2'",
          type: "String",
          width: 150,
          searchable: true,
          transform: ["trim"],
          fullName: "Secret",
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        key: {
          show: "row['type']=='oauth2'",
          type: "String",
          width: 150,
          searchable: true,
          transform: ["trim"],
          fullName: "Key",
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        token: {
          subtype: "Text",
          show: "row['type']=='token'",
          type: "String",
          width: 150,
          searchable: true,
          transform: ["trim"],
          fullName: "Token",
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        publicKey: {
          subtype: "Text",
          show: "row['type']=='publicKey'",
          type: "String",
          width: 150,
          searchable: true,
          transform: ["trim"],
          fullName: "Public key",
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        creator: {
          type: "ObjectID",
          fullName: "creator",
          synthesize: ["creator"],
          description: "Record Creator",
          width: 120,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        createdAt: {
          type: "Date",
          fullName: "createdAt",
          synthesize: ["createdAt"],
          description: "Record Created At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        updatedAt: {
          type: "Date",
          fullName: "updatedAt",
          synthesize: ["updatedAt"],
          description: "Record Updated At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        deletedAt: {
          type: "Date",
          fullName: "deletedAt",
          description: "Record Deleted At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        _temporary: {
          type: "Boolean",
          fullName: "_temporary",
          description: "Temporary",
          width: 20,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        generatorBatchNumber: {
          type: "String",
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          generated: true,
          fullName: "Generator Batch Number",
          description: "Set to the ID of generator batch for synthetic records",
          fieldInfo: { read: true, write: true },
        },
      },
      limitReturnedRecords: 1000,
      defaultSortBy: { _id: -1 },
    },
    settings: {
      type: "Schema",
      fullName: "Settings",
      actions: {
        fields: {
          update: {
            description: "Update record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "pencil" },
            action: { type: "action", link: "update" },
          },
          delete: {
            description: "Delete record",
            backgroundColor: "#F44336",
            borderColor: "#f32c1e",
            textColor: "white",
            icon: { link: "trash-o" },
            action: { type: "action", link: "delete" },
          },
          clone: {
            description: "Clone record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "clone" },
            action: { type: "action", link: "clone" },
          },
          viewDetails: {
            description: "View record details",
            backgroundColor: "#2196F3",
            borderColor: "#0c7cd5",
            textColor: "white",
            icon: { link: "eye" },
            action: { type: "action", link: "viewDetails" },
          },
          view: { showInTable: false },
          create: { showInTable: false },
        },
        width: 100,
        responsivePriority: 50,
      },
      fields: {
        key: {
          type: "String",
          width: 150,
          searchable: true,
          transform: ["trim"],
          fullName: "Key",
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        value: {
          type: "String",
          width: 150,
          searchable: true,
          transform: ["trim"],
          fullName: "Value",
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        creator: {
          type: "ObjectID",
          fullName: "creator",
          synthesize: ["creator"],
          description: "Record Creator",
          width: 120,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        createdAt: {
          type: "Date",
          fullName: "createdAt",
          synthesize: ["createdAt"],
          description: "Record Created At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        updatedAt: {
          type: "Date",
          fullName: "updatedAt",
          synthesize: ["updatedAt"],
          description: "Record Updated At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        deletedAt: {
          type: "Date",
          fullName: "deletedAt",
          description: "Record Deleted At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        _temporary: {
          type: "Boolean",
          fullName: "_temporary",
          description: "Temporary",
          width: 20,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        generatorBatchNumber: {
          type: "String",
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          generated: true,
          fullName: "Generator Batch Number",
          description: "Set to the ID of generator batch for synthetic records",
          fieldInfo: { read: true, write: true },
        },
      },
      limitReturnedRecords: 1000,
      defaultSortBy: { _id: -1 },
    },
    log: {
      type: "Schema",
      fullName: "Log",
      actions: {
        fields: {
          update: {
            description: "Update record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "pencil" },
            action: { type: "action", link: "update" },
          },
          delete: {
            description: "Delete record",
            backgroundColor: "#F44336",
            borderColor: "#f32c1e",
            textColor: "white",
            icon: { link: "trash-o" },
            action: { type: "action", link: "delete" },
          },
          clone: {
            description: "Clone record",
            backgroundColor: "#4CAF50",
            borderColor: "#388E3C",
            textColor: "white",
            icon: { link: "clone" },
            action: { type: "action", link: "clone" },
          },
          viewDetails: {
            description: "View record details",
            backgroundColor: "#2196F3",
            borderColor: "#0c7cd5",
            textColor: "white",
            icon: { link: "eye" },
            action: { type: "action", link: "viewDetails" },
          },
          view: { showInTable: false },
          create: { showInTable: false },
        },
        width: 100,
        responsivePriority: 50,
      },
      fields: {
        kind: {
          list: { info: "Information", warn: "Warning", err: "Error" },
          type: "String",
          width: 150,
          searchable: true,
          transform: ["trim"],
          fullName: "Kind",
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        scope: {
          list: {
            auth: "Authentication",
            sys: "System",
            pull: "Data Pull",
            export: "Data Export",
          },
          type: "String",
          width: 150,
          searchable: true,
          transform: ["trim"],
          fullName: "Scope",
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        action: {
          list: { login: "Login", logout: "Logout" },
          type: "String",
          width: 150,
          searchable: true,
          transform: ["trim"],
          fullName: "Action",
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        subject: {
          type: "String",
          width: 150,
          searchable: true,
          transform: ["trim"],
          fullName: "Subject",
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        details: {
          subtype: "Text",
          type: "String",
          width: 150,
          searchable: true,
          transform: ["trim"],
          fullName: "Details",
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: true,
          showInViewDetails: true,
          showInForm: true,
          showInGraphQL: true,
          fieldInfo: { read: true, write: true },
        },
        creator: {
          type: "ObjectID",
          fullName: "creator",
          synthesize: ["creator"],
          description: "Record Creator",
          width: 120,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        createdAt: {
          type: "Date",
          fullName: "createdAt",
          synthesize: ["createdAt"],
          description: "Record Created At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        updatedAt: {
          type: "Date",
          fullName: "updatedAt",
          synthesize: ["updatedAt"],
          description: "Record Updated At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        deletedAt: {
          type: "Date",
          fullName: "deletedAt",
          description: "Record Deleted At",
          width: 85,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        _temporary: {
          type: "Boolean",
          fullName: "_temporary",
          description: "Temporary",
          width: 20,
          visibilityPriority: 100,
          responsivePriority: 100,
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          fieldInfo: { read: true, write: true },
        },
        generatorBatchNumber: {
          type: "String",
          showInDatatable: false,
          showInViewDetails: false,
          showInForm: false,
          showInGraphQL: false,
          generated: true,
          fullName: "Generator Batch Number",
          description: "Set to the ID of generator batch for synthetic records",
          fieldInfo: { read: true, write: true },
        },
      },
      limitReturnedRecords: 1000,
      defaultSortBy: { _id: -1 },
    },
  },
  interface: {
    mainMenu: {
      type: "Menu",
      fullName: "Main Menu",
      fields: {
        home: {
          type: "MenuItem",
          link: "/home",
          fullName: "Home",
          icon: { type: "font-awesome", link: "home" },
          default: "/home",
        },
        dataSources: {
          type: "MenuGroup",
          fullName: "Data Sources",
          link: "/dataSources",
          icon: { type: "font-awesome", link: "database" },
          fields: {
            allDataSources: {
              type: "MenuItem",
              fullName: "All Data Sources",
              link: "/dataSources",
            },
            addStaticDataSource: {
              type: "MenuItem",
              fullName: "Add Data Source",
              link: "/dataSources?action=create&type=static",
            },
            dataSourceTemplates: {
              type: "MenuItem",
              fullName: "Data Source Templates",
              link: "/dataSourceTemplates",
            },
            addDataSourceTemplate: {
              type: "MenuItem",
              fullName: "Add Data Source Template",
              link: "/templates?action=create&type=datasource",
            },
            separator1: { type: "MenuSeparator", fullName: "Separator 1" },
            favoriteDataSources: {
              type: "MenuItem",
              fullName: "Favorite Data Sources",
            },
          },
        },
        dataSets: {
          type: "MenuGroup",
          fullName: "Data Sets",
          icon: { type: "font-awesome", link: "table" },
          fields: {
            allDataSets: {
              type: "MenuItem",
              fullName: "All Data Sets",
              link: "/dataSets",
            },
            createDataSet: { type: "MenuItem", fullName: "Create Data Set" },
          },
        },
        actions: {
          type: "MenuGoup",
          fullName: "Actions",
          icon: { type: "font-awesome", link: "play" },
          fields: {
            allActions: {
              type: "MenuItem",
              fullName: "All Actions",
              link: "/actions",
            },
          },
        },
        campaigns: {
          type: "MenuGroup",
          fullName: "Campaigns",
          icon: { type: "font-awesome", link: "forward" },
          fields: {
            allCampaigns: {
              type: "MenuItem",
              fullName: "All Campaigns",
              link: "/campaigns",
            },
          },
        },
        exports: {
          type: "MenuGroup",
          fullName: "Exports",
          icon: { type: "font-awesome", link: "download" },
          fields: {
            allExports: {
              type: "MenuItem",
              fullName: "All Exports",
              link: "/exports",
            },
          },
        },
        publications: {
          type: "MenuGroup",
          fullName: "Publications",
          icon: { type: "font-awesome", link: "share-square-o" },
          fields: {
            allPublications: {
              type: "MenuItem",
              fullName: "All Publications",
              link: "/pubications",
            },
          },
        },
        visualizations: {
          type: "MenuGroup",
          fullName: "Visualizations",
          icon: { type: "font-awesome", link: "line-chart" },
          fields: {
            allVisualizations: {
              type: "MenuItem",
              fullName: "All Visualizations",
              link: "/visualizations",
            },
          },
        },
        dashboards: {
          type: "MenuGroup",
          fullName: "Dashboards",
          icon: { type: "font-awesome", link: "tachometer" },
          fields: {
            allDashboards: {
              type: "MenuItem",
              fullName: "All Dashboards",
              link: "/dashboards",
            },
          },
        },
        wizards: {
          type: "MenuGroup",
          fullName: "Wizards",
          icon: { type: "font-awesome", link: "magic" },
          fields: {
            allWizards: {
              type: "MenuItem",
              fullName: "All Wizards",
              link: "/wizards",
            },
          },
        },
        system: {
          type: "MenuGroup",
          fullName: "System",
          icon: { type: "font-awesome", link: "cogs" },
          fields: {
            settings: {
              type: "MenuGroup",
              fullName: "Settings",
              icon: { type: "font-awesome", link: "wrench" },
              fields: {
                credentials: { type: "MenuItem", fullName: "Credentials" },
                emailAccounts: {
                  type: "MenuItem",
                  fullName: "Email Accounts",
                },
                campaignApproval: {
                  type: "MenuItem",
                  fullName: "Campaign Approval",
                },
                security: { type: "MenuItem", fullName: "Security" },
              },
            },
            users: { type: "MenuItem", fullName: "Users" },
            roles: { type: "MenuItem", fullName: "Roles" },
            log: { type: "MenuItem", fullName: "Log" },
          },
        },
        help: {
          type: "MenuGroup",
          fullName: "Help",
          icon: { type: "font-awesome", link: "question-circle" },
          fields: {
            reportAProblem: {
              type: "MenuItem",
              fullName: "Report a Problem",
              link: "/reportAProblem",
            },
            releaseNotes: {
              type: "MenuItem",
              fullName: "Release Notes",
              link: "https://www.411labs.com/insite-version-release-notes/",
            },
            usersManual: {
              type: "MenuItem",
              fullName: "User's Manual",
              link: "https://www.411labs.com/insite-current-documentation/",
            },
          },
        },
        user: {
          fields: { logout: { icon: "/logout" }, profile: { icon: "/users" } },
        },
        fourOneOneLabs: {
          type: "MenuGroup",
          fullName: "411Labs",
          icon: { type: "font-awesome", link: "square-o" },
        },
      },
    },
    pages: {
      home: {
        link: "/home",
        fullName: "Home",
        description: "Home",
        template: ["411Labs Sherpa is awesome!", ""],
        controller: "Default",
      },
    },
    app: {
      title: "411Labs Sherpa",
      slogan: "Actionable data in action",
      name: "411Labs Sherpa",
      description: "411Labs Sherpa",
      keywords: "411Labs Sherpa, 411Labs, Sherpa, Jive, Data analytics",
      client: "You",
      product: "Accelerated Development Platform Demo",
      theme: "default",
      logo: {
        large: "/favicon/logo.png",
        small: "/favicon/logo.png",
        tiny: "/favicon/logo.png",
      },
      favicon: {
        "180x180": "/public/favicons/apple-touch-icon.png",
        "32x32": "/public/favicons/favicon-32x32.png",
        "16x16": "/public/favicons/favicon-16x16.png",
        manifest: {},
        maskIcon: {},
        "180X180": "/favicon/logo.png",
        "32X32": "/favicon/favicon-32x32.ico",
        "16X16": "/favicon/favicon-16x16.ico",
      },
      header: {
        visible: true,
        components: {
          logo: false,
          alerts: false,
          projectSelector: false,
          languageSelector: false,
          fullScreenToggle: true,
          search: false,
          logoutButton: true,
          menuToggle: false,
        },
      },
      footer: {
        visible: true,
        components: {
          copyright: false,
          copyrightText: "2018 411Labs, Inc",
          lastAccountActivity: false,
          status: false,
        },
      },
    },
    layout: {
      fixed: {
        header: false,
        navigation: true,
        ribbon: false,
        footer: false,
      },
      fixedWidth: false,
      rtlSupport: false,
      menuPosition: "top",
      colorblind: false,
      background: "/public/img/pattern/paper.png",
      showDemoControls: false,
      fixedNavigation: true,
    },
    loginPage: {
      intro: {
        template:
          '<h1>\n    {{interface.app.title}}\n</h1>\n\n<div class="hero">\n    <div class="pull-left login-desc-box-l">\n        <h4 class="paragraph-header">{{interface.app.slogan}}</h4>\n    </div>\n\n    <img ng-src="{{interface.app.logo.large}}"\n         class="pull-right display-image"\n         alt="">\n</div>',
      },
      parameters: {
        signInText: "Sign In",
        signUpText: "Create Account",
        captcha: "google",
      },
    },
    header: {
      visible: true,
      components: {
        logo: true,
        alerts: false,
        projectSelector: false,
        languageSelector: true,
        fullScreenToggle: true,
        search: false,
        logoutButton: true,
        menuToggle: false,
        userMenu: false,
        loginInfo: true,
        breadcrumbs: true,
      },
    },
    footer: {
      visible: true,
      components: {
        copyright: true,
        copyrightText: "Conceptant &copy; 2016-2017",
        lastAccountActivity: false,
        status: false,
      },
    },
    skin: "smart-style-2",
  },
  mediaTypes: {
    images: ["jpg", "jpeg", "png", "gif", "bmp"],
    video: ["webm", "mp4", "mpeg", "mpg"],
    audio: ["webm", "mp3", "wav", "ogg"],
    docs: [
      "pdf",
      "doc",
      "docx",
      "ppt",
      "rtf",
      "odt",
      "xls",
      "xlsx",
      "djvu",
      "djv",
    ],
    any: [
      "jpg",
      "jpeg",
      "png",
      "gif",
      "bmp",
      "webm",
      "mp4",
      "mpeg",
      "mpg",
      "webm",
      "mp3",
      "wav",
      "ogg",
      "pdf",
      "doc",
      "docx",
      "ppt",
      "pptx",
      "rtf",
      "odt",
      "xls",
      "xlsx",
      "djvu",
      "djv",
    ],
  },
  metaschema: {
    type: {
      required: true,
      default: "String",
      list: [
        "String",
        "Number",
        "Date",
        "Boolean",
        "Mixed",
        "Array",
        "Object",
        "Schema",
        "ObjectID",
        "LookupObjectID",
        "String[]",
        "Date[]",
        "Number[]",
        "Boolean[]",
        "Mixed[]",
        "Object[]",
        "ObjectID[]",
        "LookupObjectID[]",
        "Image",
        "Video",
        "Audio",
        "File",
        "Image[]",
        "Video[]",
        "Audio[]",
        "File[]",
        "Menu",
        "MenuGroup",
        "MenuItem",
        "MenuDashboardLink",
        "Dashboard",
        "DashboardItem",
        "Group",
        "Location",
      ],
      fullName: "Type",
      description:
        "The type of the value. It has no default, so you always have to specify it. Also do not use schema attribute name 'type'. Some types are only available for interface elements and not the model",
    },
    subtype: {
      list: [
        "Password",
        "Email",
        "Phone",
        "Url",
        "Text",
        "ImperialHeight",
        "ImperialWeight",
        "ImperialWeightWithOz",
        "BloodPressure",
        "Date",
        "Time",
        "DateTime",
        "DynamicList",
        "Barcode",
      ],
      fullName: "Field Subtype",
      description:
        "Overrides default field visual representation. For instance for type String the default input type is TEXT, but can be overridden here to be PASSWORD",
    },
    width: {
      default: 100,
      fullName: "Width",
      description: "Width of the field as rendered in the datatables",
      comment:
        "TODO: discuss with the team and decide if UI attributes should be grouped. For instance 'ui':{width:100,height:200,style:'best'}",
    },
    formWidth: {
      default: 12,
      fullName: "Form Width",
      description: "Width of the field as rendered in in a form (col-md)",
    },
    colspan: {
      fullName: "Column Span",
      description: "Defines what portion of a layout it should occupy",
      comment:
        "TODO: discuss with the team and decide if UI attributes should be grouped. For instance 'ui':{width:100,height:200,style:'best', colspan:2}. Or get rid of this",
    },
    visibilityPriority: {
      default: 100,
      fullName: "Visibility Priority",
      description:
        "Defines the priority of this field being displayed in datatables",
      comment:
        "TODO: discuss with the team and decide if UI attributes should be grouped. For instance 'ui':{width:100,visibilityPriority:200,style:'best', colspan:2}. Or get rid of this",
    },
    responsivePriority: {
      default: 100,
      fullName: "Responsive Priority",
      description:
        "Defines the priority of this field being hidden in datatables as described here: https://datatables.net/extensions/responsive/priority (the higher the priority, the sooner the column will be hidden in narrow windows)",
    },
    labelRenderer: {
      fullName: "Label Renderer",
      comment: "depreciate this in favor of synthetic fields",
      description:
        "Name of the function from LabelRenderers rendering label representing given object. This is used in parent select lists and similar, for instance see encounters.",
    },
    singleRecord: {
      fullName: "Single Record",
      type: "Boolean",
      description:
        "Requires special treatment in UI since only one record will be returnedm not need to show datatables",
    },
    title: {
      fullName: "Title",
      description: "The title of the dashboard item or similar tile",
    },
    icon: {
      fullName: "Icon",
      description: "Icon associated with a given item (for instance menu item)",
      fields: {
        type: {
          description: "Icon type: font-awesome, in the future: image etc",
          list: ["font-awesome"],
          default: "font-awesome",
        },
      },
    },
    link: {
      fullName: "Link",
      description:
        "The URL to be linked to a title. Can be a javascript or modal target for bringing up modal dialogs",
    },
    linkLabel: {
      fullName: "View All",
      description: "The label of the link in a dashbaord item or a tile",
    },
    template: {
      fullName: "Template",
      description:
        "Template representing the dashboard item or tile or similar visual element",
      supportsExternalData: true,
    },
    data: {
      fullName: "Data",
      description: "Data for various elements (for instance charts)",
      supportsExternalData: true,
    },
    fullName: {
      required: true,
      fullName: "Full Name",
      description: "Full name of the field in human-readable form",
    },
    description: {
      fullName: "Description",
      description:
        "Description of the field meaning. This will be sent to the front-end",
    },
    permissions: {
      fullName: "Permissions",
      description: "Field permissions",
    },
    temporary: {
      fullName: "Temporary",
      description:
        "If temporary then it should not be listed as a part of dictionary as this attribute is only used for MVP demo",
    },
    default: {
      fullName: "Default Value",
      description:
        "Specifies the default value for this field if no value is provided",
    },
    defaultF: {
      fullName: "Default Function",
      description:
        "Specifies the function that will return the default value for this field if no value is provided",
      comment: "TODO: get rid of it, replace with 'transform' attribute",
    },
    list: {
      fullName: "List",
      comment: "Lists all possible values of this attribute",
    },
    listUrl: {
      fullName: "List URL",
      description: "URL of REST EP returning the values",
    },
    comment: {
      fullName: "Comment",
      description:
        "Free-form text containing comments about this field, will not be visible to the users or sent to front-end",
    },
    visible: {
      default: true,
      type: "Boolean",
      fullName: "Visible",
      description:
        "Determines if the field should be visible in the forms by default or not. Can be overridden in a specific form, but will be sent to the front-end",
    },
    showInDatatable: {
      default: true,
      type: "Boolean",
      fullName: "Show In Datatable",
      description:
        "If set to true (default) then this field will be displayed in the datatables.",
    },
    showInViewDetails: {
      default: true,
      type: "Boolean",
      fullName: "Show In Form of viewDetails action",
      description:
        "If set to true (default) then this field will be displayed in the viewDetails action form.",
    },
    showInForm: {
      default: true,
      type: "Boolean",
      fullName: "Show In Form",
      description:
        "If set to true (default) then this field will be displayed in the form.",
    },
    showInGraphQL: {
      default: true,
      type: "Boolean",
      fullName: "Show In GraphQL",
      description:
        "If set to true (default) then this field will be added to GraphQL type thus it can be present in Query.",
    },
    searchable: {
      fullName: "Searchable",
      type: "Boolean",
      description:
        "If true then this field can be searched in order to fin right record in lookups, datatable searches and similar",
    },
    serverSide: {
      fullName: "Server-side",
      type: "Boolean",
      description:
        "If true then most of the handling for these records should be done by the server, i.e. server-side mode for datatables",
    },
    required: {
      fullName: "Required",
      type: "Boolean",
      description:
        "If the attribute is required then no part of the record can be submitted without this attribute",
    },
    generated: {
      fullName: "Generated",
      type: "Boolean",
      description:
        "If set to true than the field is hidden and its value will be take care of middleware. Can be set to array of function calls which will be called in order to generate the value",
      comment:
        "This needs to be depreciated eventually in favor of synthetic fields",
    },
    unique: {
      fullName: "Unique",
      type: "Boolean",
      description:
        "If set to true then this attribute value have to be unique across entire collection. You don't need to specify index:true if unique:true",
    },
    validate: {
      fullName: "List of Validators",
      description:
        "Validates the attribute value against validators specified in the array. Both simplified and advanced form of validators is supported, see 0_validatorShortcuts.json for translation specification",
    },
    render: {
      fullName: "Field Renderer",
      description:
        "Renderers provide a way to render the data in a non-default way",
    },
    formRender: {
      fullName: "Field Renderer for the forms",
      description:
        "Unlike 'render' this one is used in forms, not in datatables",
    },
    synthesize: {
      fullName: "Synthesize",
      description:
        "Specifies a way to synthesize the field value. If field has this attribute it's treated as synthetic and doesn't require direct user input",
    },
    virtual: {
      fullName: "Virtual",
      description:
        'Virtual fields is a special case of synthetic fields when the value of the field is not stored in the database, but calculated on the fly during the "view" action and other actions that read from the database. The virtual fields are calculated using the same synthesizers and are indicated with attribute "virtual: true".',
    },
    errorMessages: {
      fullName: "Error Messages",
      description:
        "Error message templates to be used and returned by the validator",
    },
    arguments: {
      fullName: "Arguments",
      description: "Arguments to be used in the validator",
    },
    transform: {
      fullName: "Trasform",
      description:
        "Lists array functions to be called to transform the data before storing it in the database. You can provide a 2-element array instead of one function to perform transformation before storing value into the database and after retrieving value from the database",
    },
    schemaTransform: {
      fullName: "Schema Trasform",
      description:
        "Lists array functions to be called to transform the model schema",
    },
    fields: { fullName: "Fields", description: "List of included fields" },
    index: {
      fullName: "Index",
      type: "Boolean",
      description: "If true then the field need to be indexed",
    },
    lookup: {
      fullName: "Lookup",
      description:
        "A way to link two collections and lookup for appropriate record in the foreign collection",
    },
    limitReturnedRecords: {
      fullName: "Limit Returned Records",
      description:
        "If set to a number then no more than this number of records can be returned at once. Only applicable to schemas, nothing else.",
    },
    controller: {
      fullName: "Controller",
      description:
        "If set than this model will use custom controller named as specified in this attribute",
    },
    defaultSortBy: {
      default: { _id: -1 },
      fullName: "Default Sort By",
      description:
        "Unless specified otherwise in the query the backend will sort its GET queries based on this order",
    },
    parameters: {
      fulName: "Parameters",
      description: "Various parameters specific for the givern type of field",
    },
    generatorSpecification: {
      default: "2",
      fullName: "Specification for the generator",
      description:
        "See synthetic_generator.js#get_model_records in CorpUtil for examples of how the spec may look like",
    },
    generatorDistribution: {
      default: "random",
      list: ["random", "sequential"],
      fullName: "Distribution",
      description:
        "How values from the range of possible values should be picked",
    },
    menus: {
      fields: {
        type: {
          list: ["MenuItem", "MenuGroup", "MenuDashboardLink"],
          default: "MenuItem",
        },
      },
    },
    app: { fields: { type: { default: "ApplicationInterface" } } },
    pages: { fields: { type: { list: ["Page"], default: "Page" } } },
    show: {
      fullName: "Show",
      description: "Contains condition for showing this field",
    },
    actions: {
      fullName: "Actions",
      required: false,
      description:
        "Lists actions available for the schema records. Supported default actions: create, update, delete, view, viewDetails",
      comment: "different actions may require different roles",
      fields: {
        showInTable: {
          description:
            "Used in actions. If true then there should be a button in the datatables view linked to this action",
          default: true,
        },
        permissions: {
          type: "String[]",
          default: "authenticated",
          fullName: "Permissions",
          description:
            "Lists permissions associated with given activity/data or role. One permission 'authenticated' is set for all logged-in users",
        },
        icon: {
          fullName: "Icon",
          description: "Icon associated with a given Action",
          fields: {
            type: {
              description: "Icon type: font-awesome, in the future: image etc",
              list: ["font-awesome"],
              default: "font-awesome",
            },
            link: {
              description:
                "the name of the font-awesome icon or link to the image representing the icon",
            },
          },
        },
        fullName: {
          description:
            "If set then this name will be displayed on the button as a label",
        },
        action: {
          fields: {
            type: { list: ["action", "link"], default: "action" },
            link: { type: "String" },
          },
        },
      },
    },
    scopes: {
      fullName: "Scopes",
      required: false,
      description: "Lists scopes available for the schema records.",
      comment:
        "Schemas have permissions specifying who can execute actions with records.",
    },
  },
  typeDefaults: {
    comment:
      "This file provides defaults for various attributes depending on the field type. One can always override these defaults by providing value directly in the field",
    fields: {
      String: { width: 150, searchable: true, transform: ["trim"] },
      Date: { width: 85 },
      Number: { width: 30 },
      Boolean: { width: 20 },
      ObjectID: { width: 120 },
      Schema: {
        fields: {
          creator: {
            type: "ObjectID",
            fullName: "creator",
            visible: false,
            synthesize: "creator",
            description: "Record Creator",
            permissions: "accessAsSuperAdmin",
          },
          createdAt: {
            type: "Date",
            fullName: "createdAt",
            visible: false,
            synthesize: "createdAt",
            description: "Record Created At",
            permissions: "accessAsSuperAdmin",
          },
          updatedAt: {
            type: "Date",
            fullName: "updatedAt",
            visible: false,
            synthesize: "updatedAt",
            description: "Record Updated At",
            permissions: "accessAsSuperAdmin",
          },
          deletedAt: {
            type: "Date",
            fullName: "deletedAt",
            visible: false,
            description: "Record Deleted At",
            permissions: "accessAsSuperAdmin",
          },
          _temporary: {
            type: "Boolean",
            fullName: "_temporary",
            visible: false,
            description: "Temporary",
            permissions: "accessAsSuperAdmin",
          },
        },
        limitReturnedRecords: 1000,
        scopes: {
          superAdminScope: {
            permissions: "accessAsSuperAdmin",
            where: "{$eq: [true, true]}",
          },
        },
        actions: {
          width: 100,
          responsivePriority: 50,
          fields: {
            update: {
              description: "Update record",
              backgroundColor: "#4CAF50",
              borderColor: "#388E3C",
              textColor: "white",
              icon: { link: "pencil" },
              action: { type: "action", link: "update" },
            },
            delete: {
              description: "Delete record",
              backgroundColor: "#F44336",
              borderColor: "#f32c1e",
              textColor: "white",
              icon: { link: "trash-o" },
              action: { type: "action", link: "delete" },
            },
            clone: {
              description: "Clone record",
              backgroundColor: "#4CAF50",
              borderColor: "#388E3C",
              textColor: "white",
              icon: { link: "clone" },
              action: { type: "action", link: "clone" },
            },
            viewDetails: {
              description: "View record details",
              backgroundColor: "#2196F3",
              borderColor: "#0c7cd5",
              textColor: "white",
              icon: { link: "eye" },
              action: { type: "action", link: "viewDetails" },
            },
            view: { showInTable: false },
            create: { showInTable: false },
          },
        },
      },
    },
  },
  subtypeDefaults: {
    fields: {
      Password: {
        width: 60,
        validate: [
          {
            validator: "regex",
            arguments: {
              regex:
                "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%!&^*_\\-]).{8,}$",
              regexOptions: "",
            },
            errorMessages: {
              default:
                "Password must contain at least one of each: digit 0-9, lowercase character, uppercase character and one special character: @#$%!&^*-_ and be at least 8 characters long",
            },
          },
        ],
        transform: [["rewritePasswordAndAddSalt", "cleanupPassword"]],
      },
      Email: {
        width: 150,
        validate: [
          {
            validator: "regex",
            arguments: {
              regex:
                "^[a-zA-Z0-9.!#$%&’*+\\/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$",
              regexOptions: "i",
            },
            errorMessages: { default: "Please enter correct email" },
          },
        ],
      },
      Url: {
        width: 150,
        render: "link",
        validate: [
          {
            validator: "regex",
            arguments: {
              regex:
                "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
              regexOptions: "i",
            },
            errorMessages: { default: "Please enter correct URL" },
          },
        ],
      },
      Phone: {
        width: 80,
        validate: [
          {
            validator: "regex",
            arguments: {
              regex: "\\d{3}[^\\d]*\\d{3}[^\\d]*\\d{4}",
              regexOptions: "i",
            },
            errorMessages: {
              default: "Please provide correct US phone number",
            },
          },
        ],
      },
      Text: { width: 180 },
      ImperialHeight: {
        width: 50,
        transform: [["heightImperialToMetric", "heightMetricToImperial"]],
        validate: [
          {
            validator: "imperialHeightRange",
            arguments: { from: [0, 1], to: [8, 11] },
            errorMessages: {
              default:
                "This height doesn't look reasonable, should be more than 1\" less than 8'11\"",
            },
          },
        ],
      },
      ImperialWeight: {
        width: 50,
        transform: [
          "trim",
          ["weightImperialToMetric", "weightMetricToImperial"],
        ],
        validate: ["min(1)", "max(1000)"],
      },
      ImperialWeightWithOz: {
        width: 50,
        transform: [
          "trim",
          ["weightImperialWithOzToMetric", "weightMetricToImperialWithOz"],
        ],
      },
    },
  },
  validatorShortcuts: {
    regex: {
      arguments: { regex: "$1", regexOptions: "$2" },
      errorMessages: { default: "This value doesn't seem right" },
    },
    minLength: {
      arguments: { length: "$1" },
      errorMessages: {
        default:
          "Value is too short, should be at least $length characters long",
      },
    },
    maxLength: {
      arguments: { length: "$1" },
      errorMessages: {
        default: "Value is too long, should be at most $length characters long",
      },
    },
    min: {
      arguments: { limit: "$1" },
      ui: { "md-datepicker": 'md-min-date="$limit"' },
      errorMessages: {
        default:
          "Value $val is too small, should be greater than or equal @limit",
        date: "Date $val should be after @limit (#limit)",
      },
    },
    max: {
      arguments: { limit: "$1" },
      ui: {
        "md-datepicker": 'md-max-date="$limit"',
        'input[type="Number"]': 'ng-min"$limit"',
      },
      errorMessages: {
        default: "Value $val is too large, should be less than or equal @limit",
        date: "Date $val should be before @limit (#limit)",
      },
    },
    notInFuture: {
      arguments: {},
      ui: { "md-datepicker": 'md-max-date="$now"' },
      errorMessages: { default: "This date cannot be in the future" },
    },
    notInPast: {
      arguments: {},
      ui: { "md-datepicker": 'md-min-date="$now"' },
      errorMessages: { default: "This date cannot be in the past" },
    },
    notEqual: {
      arguments: { value: "$1" },
      errorMessages: {
        default: "Value should not be equal to '@value' (#value)",
      },
    },
    equal: {
      arguments: { value: "$1" },
      errorMessages: { default: "Value should be equal to '@value' (#value)" },
    },
    dynamicListValue: {
      arguments: {},
      errorMessages: {
        default:
          "Please select correct option from this list. Reload the page to refresh the available options",
      },
    },
  },
};
